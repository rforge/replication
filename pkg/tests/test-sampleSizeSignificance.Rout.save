
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(ReplicationSuccess)
> 
> ## Functions to check for errors and (approximate) numerical equality
> ## ------------------------------------------------------------------
> checkError <- function(expr) {
+   inherits(try(expr = expr, silent = TRUE), "try-error")
+ }
> 
> checkNum <- function(x, y) {
+   stopifnot(isTRUE(all.equal.numeric(x, y)))
+ }
> 
> checkNumTol <- function(x, y, tol = .Machine$double.eps) {
+   stopifnot(isTRUE(all.equal.numeric(x, y, 
+                                      tolerance = tol,
+                                      check.attributes = FALSE)))
+ }
> 
> ## Check that wrong inputs throw errors
> ## ------------------------------------------------------------------
> checkError(sampleSizeSignificance(zo = 1, power = 0.8, designPrior = "wrong"))
[1] TRUE
> checkError(sampleSizeSignificance(zo = 1, power = -1))
[1] TRUE
> checkError(sampleSizeSignificance(zo = 1, power = 2))
[1] TRUE
> checkError(sampleSizeSignificance(zo = 1, power = 0.8, level = -1))
[1] TRUE
> checkError(sampleSizeSignificance(zo = 1, power = 0.8, level = 2))
[1] TRUE
> checkError(sampleSizeSignificance(zo = 1, power = 0.8, h = -1))
[1] TRUE
> checkError(sampleSizeSignificance(zo = 1, power = 0.8, shrinkage = -1))
[1] TRUE
> checkError(sampleSizeSignificance(zo = 1, power = 0.8, shrinkage = 2))
[1] TRUE
> checkError(sampleSizeSignificance(zo = 1, power = 0.8, alternative = "wrong"))
[1] TRUE
> 
> ## Check numerically some results 
> ## ------------------------------------------------------------------
> za <- qnorm(p = 0.025, lower.tail = FALSE)
> checkNumTol(sampleSizeSignificance(zo = za, designPrior = "conditional",
+                                    power = 0.8, alternative = "one.sided"),
+             2.04, tol = 0.01)
> 
> ## Apply over a grid of values
> ## ------------------------------------------------------------------
> zo <- seq(-4, 4, 2)
> apply_grid <- expand.grid(priors = c("conditional", "predictive", "EB"),
+                           h = c(0, 0.1),
+                           shrinkage = c(0, 0.75),
+                           alt = c("greater", "two.sided"),
+                           stringsAsFactors = FALSE)
> for (i in seq(1, nrow(apply_grid))) {
+   print(apply_grid[i,])
+   c <- sampleSizeSignificance(zo = zo, 
+                               power = 0.8, 
+                               level = 0.05,
+                               designPrior = apply_grid$priors[i],
+                               alternative = apply_grid$alt[i],
+                               h = apply_grid$h[i],
+                               shrinkage = apply_grid$shrinkage[i])
+   print(round(c, digits = 5))
+ }
       priors h shrinkage     alt
1 conditional 0         0 greater
[1] 0.38641 1.54564     Inf 1.54564 0.38641
      priors h shrinkage     alt
2 predictive 0         0 greater
[1]     NaN     NaN     NaN 2.64240 0.44059
  priors h shrinkage     alt
3     EB 0         0 greater
[1]     NaN     NaN     NaN 5.68100 0.50569
       priors   h shrinkage     alt
4 conditional 0.1         0 greater
[1] 0.38641 1.54564     Inf 1.54564 0.38641
      priors   h shrinkage     alt
5 predictive 0.1         0 greater
[1]     NaN     NaN     NaN 2.95872 0.45233
  priors   h shrinkage     alt
6     EB 0.1         0 greater
[1]     NaN     NaN     NaN 7.60909 0.52828
       priors h shrinkage     alt
7 conditional 0      0.75 greater
[1]  6.18256 24.73023      Inf 24.73023  6.18256
      priors h shrinkage     alt
8 predictive 0      0.75 greater
[1]      NaN      NaN      NaN      NaN 113.1002
  priors h shrinkage     alt
9     EB 0      0.75 greater
[1]     NaN     NaN     NaN 5.68100 0.50569
        priors   h shrinkage     alt
10 conditional 0.1      0.75 greater
[1]  6.18256 24.73023      Inf 24.73023  6.18256
       priors   h shrinkage     alt
11 predictive 0.1      0.75 greater
[1]      NaN      NaN      NaN      NaN 453.9128
   priors   h shrinkage     alt
12     EB 0.1      0.75 greater
[1]     NaN     NaN     NaN 7.60909 0.52828
        priors h shrinkage       alt
13 conditional 0         0 two.sided
[1] 0.49055 1.96222     Inf 1.96222 0.49055
       priors h shrinkage       alt
14 predictive 0         0 two.sided
[1] 0.56767 3.51088     NaN 3.51088 0.56767
   priors h shrinkage       alt
15     EB 0         0 two.sided
[1] 0.65212 7.62155     NaN 7.62155 0.65212
        priors   h shrinkage       alt
16 conditional 0.1         0 two.sided
[1] 0.49055 1.96222     Inf 1.96222 0.49055
       priors   h shrinkage       alt
17 predictive 0.1         0 two.sided
[1] 0.58435 3.95489     NaN 3.95489 0.58435
   priors   h shrinkage       alt
18     EB 0.1         0 two.sided
[1]  0.68329 10.30125      NaN 10.30125  0.68329
        priors h shrinkage       alt
19 conditional 0      0.75 two.sided
[1]  7.84888 31.39552      Inf 31.39552  7.84888
       priors h shrinkage       alt
20 predictive 0      0.75 two.sided
[1] 158.406     NaN     NaN     NaN 158.406
   priors h shrinkage       alt
21     EB 0      0.75 two.sided
[1] 0.65212 7.62155     NaN 7.62155 0.65212
        priors   h shrinkage       alt
22 conditional 0.1      0.75 two.sided
[1]  7.84888 31.39552      Inf 31.39552  7.84888
       priors   h shrinkage       alt
23 predictive 0.1      0.75 two.sided
[1] 640.3952      NaN      NaN      NaN 640.3952
   priors   h shrinkage       alt
24     EB 0.1      0.75 two.sided
[1]  0.68329 10.30125      NaN 10.30125  0.68329
> 
> proc.time()
   user  system elapsed 
  0.198   0.004   0.197 
